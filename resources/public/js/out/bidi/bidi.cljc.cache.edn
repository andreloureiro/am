;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{uuid}, :name bidi.bidi, :imports {Uri goog.Uri}, :requires {walk clojure.walk, clojure.walk clojure.walk, s schema.core, schema.core schema.core, Uri goog.Uri}, :uses {postwalk clojure.walk}, :defs {tag {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 463, :column 7, :end-line 463, :end-column 10, :arglists (quote ([matched tag]))}, :name bidi.bidi/tag, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 10, :method-params ([matched tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 463, :end-line 463, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matched tag]))}, uuid {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 23, :column 7, :end-line 23, :end-column 11, :arglists (quote ([s])), :doc "Function for creating a UUID of the appropriate type for the platform.\nNote that this function should _only_ be used in route patterns as, at least\nin the case of ClojureScript, it does not validate that the input string is\nactually a valid UUID (this is handled by the route matching logic)."}, :name bidi.bidi/uuid, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 11, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Function for creating a UUID of the appropriate type for the platform.\nNote that this function should _only_ be used in route patterns as, at least\nin the case of ClojureScript, it does not validate that the input string is\nactually a valid UUID (this is handled by the route matching logic)."}, url-decode {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 17, :column 7, :end-line 17, :end-column 17, :arglists (quote ([string]))}, :name bidi.bidi/url-decode, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 17, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}, ->TaggedMatch {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 454, :column 12, :end-line 454, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([matched tag]))}, :name bidi.bidi/->TaggedMatch, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 23, :method-params ([matched tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 454, :end-line 454, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matched tag]))}, map->Route {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 382, :column 12, :end-line 382, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__47175]))}, :name bidi.bidi/map->Route, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 17, :method-params ([G__47175]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 382, :end-line 382, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__47175]))}, just-path {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 188, :column 7, :end-line 188, :end-column 16, :arglists (quote ([path]))}, :name bidi.bidi/just-path, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 16, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, map->Alternates {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 439, :column 12, :end-line 439, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__47240]))}, :name bidi.bidi/map->Alternates, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 22, :method-params ([G__47240]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 439, :end-line 439, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__47240]))}, handler {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 475, :column 20, :end-line 475, :end-column 27, :deprecated true, :arglists (quote ([k handler] [handler])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([k handler] [handler]), :arglists ([k handler] [handler]), :arglists-meta (nil nil)}}, :name bidi.bidi/handler, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([k handler] [handler]), :arglists ([k handler] [handler]), :arglists-meta (nil nil)}, :method-params ([k handler] [handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 475, :deprecated true, :end-line 475, :max-fixed-arity 2, :fn-var true, :arglists ([k handler] [handler])}, map->IdentifiableHandler {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 466, :column 12, :end-line 466, :end-column 31, :internal-ctor true, :factory :map, :arglists (quote ([G__47492]))}, :name bidi.bidi/map->IdentifiableHandler, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 31, :method-params ([G__47492]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 466, :end-line 466, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__47492]))}, RouteSeq {:meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 384, :column 14, :end-line 384, :end-column 22, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {gather [[_ context]]}}}, :protocol-symbol true, :name bidi.bidi/RouteSeq, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 22, :column 1, :line 384, :protocol-info {:methods {gather [[_ context]]}}, :info nil, :end-line 384, :impls #{cljs/core.PersistentHashMap cljs/core.LazySeq bidi.bidi/RoutesContext cljs/core.List cljs/core.PersistentArrayMap default cljs/core.PersistentVector}, :doc nil, :jsdoc ("@interface")}, match-pattern {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 181, :column 4, :end-line 181, :end-column 17, :protocol bidi.bidi/Pattern, :doc nil, :arglists (quote ([_ path]))}, :protocol bidi.bidi/Pattern, :name bidi.bidi/match-pattern, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 17, :method-params ([_ path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ path])), :doc nil}, route-seq {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 387, :column 7, :end-line 387, :end-column 16, :arglists (quote ([[pattern matched] ctx] [route])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([[pattern matched] ctx] [route]), :arglists ([[pattern matched] ctx] [route]), :arglists-meta (nil nil)}}, :name bidi.bidi/route-seq, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([[pattern matched] ctx] [route]), :arglists ([[pattern matched] ctx] [route]), :arglists-meta (nil nil)}, :method-params ([[pattern matched] ctx] [route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 387, :end-line 387, :max-fixed-arity 2, :fn-var true, :arglists ([[pattern matched] ctx] [route])}, Matched {:meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 184, :column 14, :end-line 184, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {resolve-handler [[_ m]], unresolve-handler [[_ m]]}}}, :protocol-symbol true, :name bidi.bidi/Matched, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 21, :column 1, :line 184, :protocol-info {:methods {resolve-handler [[_ m]], unresolve-handler [[_ m]]}}, :info nil, :end-line 184, :impls #{nil cljs/core.PersistentHashMap cljs/core.LazySeq cljs/core.Keyword bidi.bidi/RoutesContext cljs/core.List cljs/core.PersistentArrayMap cljs/core.PersistentVector string bidi.bidi/TaggedMatch function bidi.bidi/IdentifiableHandler cljs/core.Symbol}, :doc nil, :jsdoc ("@interface")}, match-pair {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 193, :column 7, :end-line 193, :end-column 17, :arglists (quote ([[pattern matched] orig-env])), :doc "A pair contains a pattern to match (either fully or partially) and an\n  expression yielding a handler. The second parameter is a map\n  containing state, including the remaining path."}, :name bidi.bidi/match-pair, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 17, :method-params ([p__47047 orig-env]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[pattern matched] orig-env])), :doc "A pair contains a pattern to match (either fully or partially) and an\n  expression yielding a handler. The second parameter is a map\n  containing state, including the remaining path."}, transform-param {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 81, :column 4, :end-line 81, :end-column 19, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/transform-param, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 19, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, alts {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 448, :column 7, :end-line 448, :end-column 11, :arglists (quote ([& alts])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(alts)], :arglists ([& alts]), :arglists-meta (nil)}}, :name bidi.bidi/alts, :variadic true, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(alts)], :arglists ([& alts]), :arglists-meta (nil)}, :method-params [(alts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 448, :end-line 448, :max-fixed-arity 0, :fn-var true, :arglists ([& alts])}, TaggedMatch {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable bidi.bidi/Matched cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/TaggedMatch, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 23, :type true, :column 12, :internal-ctor true, :line 454, :record true, :end-line 454, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, routes {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 426, :column 4, :end-line 426, :end-column 10, :protocol bidi.bidi/RouteProvider, :doc "Provide a bidi route structure. Returns a vector pair,\n  the first element is the pattern, the second element is the matched\n  route or routes.", :arglists (quote ([_]))}, :protocol bidi.bidi/RouteProvider, :name bidi.bidi/routes, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 425, :end-line 426, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Provide a bidi route structure. Returns a vector pair,\n  the first element is the pattern, the second element is the matched\n  route or routes."}, unmatch-segment {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 84, :column 4, :end-line 84, :end-column 19, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_ params]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/unmatch-segment, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 19, :method-params ([_ params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 84, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ params])), :doc nil}, match-beginning {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 202, :column 7, :end-line 202, :end-column 22, :arglists (quote ([regex-pattern env])), :doc "Match the beginning of the :remainder value in m. If matched, update\n  the :remainder value in m with the path that remains after matching."}, :name bidi.bidi/match-beginning, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 22, :method-params ([regex-pattern env]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 2, :fn-var true, :arglists (quote ([regex-pattern env])), :doc "Match the beginning of the :remainder value in m. If matched, update\n  the :remainder value in m with the path that remains after matching."}, resolve-handler {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 185, :column 4, :end-line 185, :end-column 19, :protocol bidi.bidi/Matched, :doc nil, :arglists (quote ([_ m]))}, :protocol bidi.bidi/Matched, :name bidi.bidi/resolve-handler, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 19, :method-params ([_ m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 185, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ m])), :doc nil}, IdentifiableHandler {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable bidi.bidi/Matched cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/IdentifiableHandler, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 31, :type true, :column 12, :internal-ctor true, :line 466, :record true, :end-line 466, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->IdentifiableHandler {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 466, :column 12, :end-line 466, :end-column 31, :internal-ctor true, :factory :positional, :arglists (quote ([id handler]))}, :name bidi.bidi/->IdentifiableHandler, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 31, :method-params ([id handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 466, :end-line 466, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id handler]))}, unresolve-handler {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 186, :column 4, :end-line 186, :end-column 21, :protocol bidi.bidi/Matched, :doc nil, :arglists (quote ([_ m]))}, :protocol bidi.bidi/Matched, :name bidi.bidi/unresolve-handler, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 21, :method-params ([_ m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 186, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ m])), :doc nil}, Route {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/Route, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 382, :record true, :end-line 382, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, routes-context {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 500, :column 7, :end-line 500, :end-column 21, :arglists (quote ([routes context])), :doc "Wrap a Matched such that a successful match will merge the given\n  context with the match-context. The merge is such that where there\n  is a conflict, the inner sub-tree overrides the outer container."}, :name bidi.bidi/routes-context, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 21, :method-params ([routes context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 500, :end-line 500, :max-fixed-arity 2, :fn-var true, :arglists (quote ([routes context])), :doc "Wrap a Matched such that a successful match will merge the given\n  context with the match-context. The merge is such that where there\n  is a conflict, the inner sub-tree overrides the outer container."}, map->TaggedMatch {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 454, :column 12, :end-line 454, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__47346]))}, :name bidi.bidi/map->TaggedMatch, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 23, :method-params ([G__47346]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 454, :end-line 454, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__47346]))}, segment-regex-group {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 75, :column 4, :end-line 75, :end-column 23, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/segment-regex-group, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 23, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, url-encode {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([string]))}, :name bidi.bidi/url-encode, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 17, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}, encode-parameter {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 36, :column 4, :end-line 36, :end-column 20, :protocol bidi.bidi/ParameterEncoding, :doc nil, :arglists (quote ([_]))}, :protocol bidi.bidi/ParameterEncoding, :name bidi.bidi/encode-parameter, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 20, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, RoutesContext {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable bidi.bidi/Matched cljs.core/IPrintWithWriter cljs.core/IIterable bidi.bidi/RouteSeq cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/RoutesContext, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 25, :type true, :column 12, :internal-ctor true, :line 487, :record true, :end-line 487, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, param-key {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 78, :column 4, :end-line 78, :end-column 13, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/param-key, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, matches? {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 87, :column 4, :end-line 87, :end-column 12, :protocol bidi.bidi/PatternSegment, :doc nil, :arglists (quote ([_ s]))}, :protocol bidi.bidi/PatternSegment, :name bidi.bidi/matches?, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 12, :method-params ([_ s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ s])), :doc nil}, gather {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 385, :column 4, :end-line 385, :end-column 10, :protocol bidi.bidi/RouteSeq, :doc "Return a sequence of leaves", :arglists (quote ([_ context]))}, :protocol bidi.bidi/RouteSeq, :name bidi.bidi/gather, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 10, :method-params ([_ context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 384, :end-line 385, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ context])), :doc "Return a sequence of leaves"}, match-route {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 363, :column 7, :end-line 363, :end-column 18, :arglists (quote ([route path & {:as options}])), :doc "Given a route definition data structure and a path, return the\n  handler, if any, that matches the path.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(route path {:as options})], :arglists ([route path & {:as options}]), :arglists-meta (nil)}}, :name bidi.bidi/match-route, :variadic true, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(route path {:as options})], :arglists ([route path & {:as options}]), :arglists-meta (nil)}, :method-params [(route path {:as options})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 363, :end-line 363, :max-fixed-arity 2, :fn-var true, :arglists ([route path & {:as options}]), :doc "Given a route definition data structure and a path, return the\n  handler, if any, that matches the path."}, ->Route {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 382, :column 12, :end-line 382, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([handler path]))}, :name bidi.bidi/->Route, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 17, :method-params ([handler path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 382, :end-line 382, :max-fixed-arity 2, :fn-var true, :arglists (quote ([handler path]))}, Alternates {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted bidi.bidi/Pattern cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi.bidi/Alternates, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 22, :type true, :column 12, :internal-ctor true, :line 439, :record true, :end-line 439, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, compile-route {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 516, :column 20, :end-line 516, :end-column 33, :deprecated true, :arglists (quote ([route]))}, :name bidi.bidi/compile-route, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 33, :method-params ([route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 516, :deprecated true, :end-line 516, :max-fixed-arity 1, :fn-var true, :arglists (quote ([route]))}, ParameterEncoding {:meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 35, :column 14, :end-line 35, :end-column 31, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {encode-parameter [[_]]}}}, :protocol-symbol true, :name bidi.bidi/ParameterEncoding, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 31, :column 1, :line 35, :protocol-info {:methods {encode-parameter [[_]]}}, :info nil, :end-line 35, :impls #{cljs/core.Keyword number cljs/core.UUID string}, :doc nil, :jsdoc ("@interface")}, ->RoutesContext {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 487, :column 12, :end-line 487, :end-column 25, :internal-ctor true, :factory :positional, :arglists (quote ([routes context]))}, :name bidi.bidi/->RoutesContext, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 25, :method-params ([routes context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 487, :end-line 487, :max-fixed-arity 2, :fn-var true, :arglists (quote ([routes context]))}, path-for {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 369, :column 7, :end-line 369, :end-column 15, :arglists (quote ([route handler & {:as params}])), :doc "Given a route definition data structure, a handler and an option map, return a\n  path that would route to the handler. The map must contain the values to any\n  parameters required to create the path, and extra values are silently ignored.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(route handler {:as params})], :arglists ([route handler & {:as params}]), :arglists-meta (nil)}}, :name bidi.bidi/path-for, :variadic true, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(route handler {:as params})], :arglists ([route handler & {:as params}]), :arglists-meta (nil)}, :method-params [(route handler {:as params})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 2, :fn-var true, :arglists ([route handler & {:as params}]), :doc "Given a route definition data structure, a handler and an option map, return a\n  path that would route to the handler. The map must contain the values to any\n  parameters required to create the path, and extra values are silently ignored."}, Pattern {:meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 177, :column 14, :end-line 177, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {match-pattern [[_ path]], unmatch-pattern [[_ m]]}}}, :protocol-symbol true, :name bidi.bidi/Pattern, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 21, :column 1, :line 177, :protocol-info {:methods {match-pattern [[_ path]], unmatch-pattern [[_ m]]}}, :info nil, :end-line 177, :impls #{cljs/core.PersistentHashMap js/RegExp boolean cljs/core.Keyword bidi.bidi/Alternates cljs/core.PersistentArrayMap cljs/core.PersistentVector string}, :doc nil, :jsdoc ("@interface")}, unmatch-pattern {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 182, :column 4, :end-line 182, :end-column 19, :protocol bidi.bidi/Pattern, :doc nil, :arglists (quote ([_ m]))}, :protocol bidi.bidi/Pattern, :name bidi.bidi/unmatch-pattern, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 19, :method-params ([_ m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 182, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ m])), :doc nil}, RouteProvider {:meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 425, :column 14, :end-line 425, :end-column 27, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {routes [[_]]}}}, :protocol-symbol true, :name bidi.bidi/RouteProvider, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 27, :column 1, :line 425, :protocol-info {:methods {routes [[_]]}}, :info nil, :end-line 425, :impls #{}, :doc nil, :jsdoc ("@interface")}, PatternSegment {:meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 72, :column 14, :end-line 72, :end-column 28, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {segment-regex-group [[_]], param-key [[_]], transform-param [[_]], unmatch-segment [[_ params]], matches? [[_ s]]}}}, :protocol-symbol true, :name bidi.bidi/PatternSegment, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 28, :column 1, :line 72, :protocol-info {:methods {segment-regex-group [[_]], param-key [[_]], transform-param [[_]], unmatch-segment [[_ params]], matches? [[_ s]]}}, :info nil, :end-line 72, :impls #{js/RegExp cljs/core.Keyword cljs/core.PersistentVector string function}, :doc nil, :jsdoc ("@interface")}, unmatch-pair {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 303, :column 7, :end-line 303, :end-column 19, :arglists (quote ([v m]))}, :name bidi.bidi/unmatch-pair, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 19, :method-params ([v m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v m]))}, ->Alternates {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 439, :column 12, :end-line 439, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([alts]))}, :name bidi.bidi/->Alternates, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 22, :method-params ([alts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 439, :end-line 439, :max-fixed-arity 1, :fn-var true, :arglists (quote ([alts]))}, match-route* {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 358, :column 7, :end-line 358, :end-column 19, :arglists (quote ([route path options]))}, :name bidi.bidi/match-route*, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 19, :method-params ([route path options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 358, :end-line 358, :max-fixed-arity 3, :fn-var true, :arglists (quote ([route path options]))}, map->RoutesContext {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 487, :column 12, :end-line 487, :end-column 25, :internal-ctor true, :factory :map, :arglists (quote ([G__47616]))}, :name bidi.bidi/map->RoutesContext, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 25, :method-params ([G__47616]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 487, :end-line 487, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__47616]))}, succeed {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/am/resources/public/js/out/bidi/bidi.cljc", :line 210, :column 7, :end-line 210, :end-column 14, :arglists (quote ([handler m]))}, :name bidi.bidi/succeed, :variadic false, :file "resources/public/js/out/bidi/bidi.cljc", :end-column 14, :method-params ([handler m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([handler m]))}}, :require-macros {s schema.core, schema.core schema.core}, :cljs.analyzer/constants {:seen #{tag :alts :path :routes handler :matched path alts routes :params matched :route :otherwise :route-params :id :context :remainder :tag id :handler context :request-method}, :order [:remainder :route :handler :params :path handler path :otherwise :alts alts :matched :tag :route-params :request-method matched tag :id id :routes :context routes context]}, :doc nil}